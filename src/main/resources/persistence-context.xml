<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd  
                          http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd 
                           http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/tx 
                           http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
                           http://www.springframework.org/schema/mvc 
                           http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd" >
       
  <context:property-placeholder 
      ignore-resource-not-found="true"
      ignore-unresolvable="true"
      location="/WEB-INF/conf/jdbc.properties"
  />
  
    <!-- To ensure that the browser does not cache data-->
  <!--   <mvc:interceptors>
      <mvc:interceptor>
        <mvc:mapping path="/api/**/*"/>
        <bean id="webContentInterceptor" class="org.springframework.web.servlet.mvc.WebContentInterceptor">
          <property name="cacheSeconds" value="0"/>
          <property name="useExpiresHeader" value="true"/>
          <property name="useCacheControlHeader" value="true"/>
          <property name="useCacheControlNoStore" value="true"/>
        </bean>
        
       </mvc:interceptor>
     </mvc:interceptors> -->
  	    <!-- Enable JSR303 (Hibernate) annotation-based validation -->
    <bean id="validationFactory" class="javax.validation.Validation" factory-method="buildDefaultValidatorFactory"/>
    
     <!-- enabling annotation driven configuration -->
    <tx:annotation-driven transaction-manager="transactionManager" />
    

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
	  <property name="driverClass" value="org.postgresql.Driver" />
	  <property name="jdbcUrl" value="${jdbc.url}" />
	  <property name="user" value="${jdbc.username}" />
	  <property name="password" value="${jdbc.password}" />
	  <!-- Pool properties -->
	  <property name="initialPoolSize" value="10"/>
	  <property name="minPoolSize" value="1" />
	  <property name="maxPoolSize" value="15" />
	  <property name="acquireRetryAttempts" value="10" />
	  <property name="acquireIncrement" value="5" />
	  <property name="idleConnectionTestPeriod" value="10800" />
	  <property name="maxIdleTime" value="21600" />
	  <property name="maxConnectionAge" value="3600" />
	  <property name="preferredTestQuery" value="SELECT 1" />
	  <property name="testConnectionOnCheckin" value="false" />
	  <property name="unreturnedConnectionTimeout" value="0" />
	  <property name="debugUnreturnedConnectionStackTraces" value="false" />
	  </bean>
	  
      <!-- For use with database -->
   <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" >
   </bean>
   
   <!--<bean id="fileServerProperties" class="com.sandt.base.utilities.properties.FileServerProperties" /> -->

   <bean id="entityManagerFactory"
    class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
    <property name="persistenceUnitName" value="testsPU" />
    <property name="dataSource" ref="dataSource" />
    <property name="jpaVendorAdapter">
      <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
        <property name="showSql" value="false" />
        <property name="databasePlatform" value="${database.platform}" />
        <property name="generateDdl" value="true" />
      </bean>
    </property>
    <property name="jpaProperties">
      <props>
        <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
      </props>
    </property>
  </bean>
    
  <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
    <property name="entityManagerFactory" ref="entityManagerFactory" />
  </bean>

 <!-- <bean id="licenceCheckPointcut" class="com.sandt.base.spring.aspects.LicenceCheckPointcut">
    <constructor-arg index="0"><ref bean="licenceService"/></constructor-arg> 
  </bean> -->

   <!-- <aop:aspectj-autoproxy proxy-target-class="true"/> -->

</beans>
